#if (${prod.get_productShortName()} == "NumX")
#**##set ($prodname="NumX")
#end
#if (${prod.get_productShortName()} == "RNE")
#**##set ($prodname="RNE")
#end
/*
 *   
 *    Copyright (c) $year NumX
 *    All rights reserved.
 *
 *    This software is the confidential and proprietary information
 *    of NumX. You shall not disclose such Confidential
 *    Information and shall use it only in accordance with the terms
 *    of the licence agreement you entered into with NumX.
 *
 */

import com.${prod.get_productShortNameLower()}.${prod.get_productShortName()}${mod.get_moduleNameNoSpace()};
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Calendar;

public class Test${prod.get_productShortName()}${mod.get_moduleNameNoSpace()} {

	public Test${prod.get_productShortName()}${mod.get_moduleNameNoSpace()}() {
	}

	public boolean test(String inputPath, String refPath, File outputModuleDir) {
		
		boolean allOK = true;
		long time = Calendar.getInstance().getTimeInMillis();
		if (${prod.get_productShortName()}${mod.get_moduleNameNoSpace()}.${prodname}${mod.get_moduleNameLowerNoSpace()}Test() != 0) {
			time = Calendar.getInstance().getTimeInMillis() - time;
			allOK = false;
			//create the xml report to indicate the library problem
			File report = null;
			try {
				report = new File(outputModuleDir, "${prodname}${mod.get_moduleNameLowerNoSpace()}.xml");
				FileWriter fw = new FileWriter(report);
				fw.write("<testsuites>\n");
				fw.write("\t<testsuite name=\"${prodname}${mod.get_moduleNameLowerNoSpace()}\" tests=\"\" failures=\"1\" error=\"0\" times=\"" + time + "\">\n");
				fw.write("\t\t<failure message=\"Call of ${prodname} ${mod.get_moduleName()} module\" type=\"\"/>\n");
				fw.write("\t</testsuite>\n");
				fw.write("</testsuites>\n");
				fw.close();
			} catch (IOException e) {
				System.err.println("Cannot write module report: " + report.getAbsolutePath());
				e.printStackTrace(System.err);
			}
		}
		
		Utilities.printDetailResult(allOK, "Call of ${prodname} ${mod.get_moduleName()} module");
		
		if (allOK) 
		{
#foreach ($func in $mod.functions)
#**##if (${func.is_release()} && !${func.is_onlyC()} && ${func.get_functionName()} != "${prodname}${mod.get_moduleNameLowerNoSpace()}Test")
#*    *#			Test${func.get_functionName()} t${func.get_functionName()} = new Test${func.get_functionName()}();
#*    *#			allOK = t${func.get_functionName()}.testAll(inputPath, refPath, "${func.get_functionName()}", outputModuleDir) && allOK;
#*    *#
#**##end
#end
		}

		return allOK;
	}

}

