{************************************************************************************

	${prod.get_productName()} - ${mod.get_moduleName()} module
	Delphi Unit (.pas)                                           version ${prod.get_productVersion()}

	This file describes functions signatures. For a detailed description of
	the functions see the Functional Manual.

************************************************************************************

	Copyright (c) $year NumX
	All rights reserved.

	This software is the confidential and proprietary information
	of NumX. You shall not disclose such Confidential
	Information and shall use it only in accordance with the terms
	of the licence agreement you entered into with NumX.

**********************************************************************************}


unit ${prod.get_productShortName()}${mod.get_moduleNameNoSpace()};

interface 

	uses NormArrays;
#foreach ($func in $mod.functions)
#**##if (!${func.is_onlyC()} && ${func.is_release()})
#*    *#
#*    *#{**********************************************************************************
#*    *#							   ${func.get_functionName()}
#*    *#
#*    *#   ${func.get_functionShortDescription()}
#*    *#   ${func.get_functionDescription()}
#*    *#
#*    *#**********************************************************************************
#*    *#
#*    *#INPUTS
#*    *##foreach ($param in $func.parameters)
#*        *##if (${param.is_inputParameter()})
#*            *#	${param.get_parameterName()}: #*
    	      *##if (${param.get_parameterType()} == "int")integer,
#*            *##elseif (${param.get_parameterType()} == "double")double,
#*            *##elseif (${param.get_parameterType()} == "int[]")integer array of dimension ${param.get_nbRows()},
#*            *##elseif (${param.get_parameterType()} == "double[]")double array of dimension ${param.get_nbRows()},
#*            *##elseif (${param.get_parameterType()} == "int[][]")integer array of dimension ${param.get_nbRows()} by ${param.get_nbColumns()},
#*            *##elseif (${param.get_parameterType()} == "double[][]")double array of dimension ${param.get_nbRows()} by ${param.get_nbColumns()},
#*            *##end
#*            *#		${param.get_parameterDescription()}
#*        *##end
#*    *##end
#*    *#
#*    *#OUTPUTS
#*    *##foreach ($param in $func.parameters)
#*        *##if (!${param.is_inputParameter()})
#*            *#	${param.get_parameterName()}: #*
    	      *##if (${param.get_parameterType()} == "int")integer,
#*            *##elseif (${param.get_parameterType()} == "double")double,
#*            *##elseif (${param.get_parameterType()} == "int[]")integer array of dimension ${param.get_nbRows()},
#*            *##elseif (${param.get_parameterType()} == "double[]")double array of dimension ${param.get_nbRows()},
#*            *##elseif (${param.get_parameterType()} == "int[][]")integer array of dimension ${param.get_nbRows()} by ${param.get_nbColumns()},
#*            *##elseif (${param.get_parameterType()} == "double[][]")double array of dimension ${param.get_nbRows()} by ${param.get_nbColumns()},
#*            *##end
#*            *#		${param.get_parameterDescription()}
#*        *##end
#*    *##end
#*    *#
#*    *#RETURN PARAMETER
#*    *#   integer, error code
#*    *#   = 0, successful exit,
#*    *#   != 0, see error codes list
#*    *#**********************************************************************************}
#*    *#	function ${func.get_functionName()}(#*
      *##foreach ($param in $func.parameters)
#*        *##if (${param.get_parameterOrder()} % 3 == 1)
#*            *#
#*            *#		#*
          *##end
#*        *##if (${param.get_parameterType()} == "int")
#*            *#var ${param.get_parameterName()}: Integer#*
          *##elseif ((${param.get_parameterType()} == "int[]") || (${param.get_parameterType()} == "int[][]"))
#*            *#${param.get_parameterName()}: TArrayOfInteger#*
          *##elseif (${param.get_parameterType()} == "double")
#*            *#var ${param.get_parameterName()}: Double#*
          *##elseif ((${param.get_parameterType()} == "double[]") || (${param.get_parameterType()} == "double[][]"))
#*            *#${param.get_parameterName()}: TArrayOfDouble#*
          *##end#*
          *##if (!(${param.get_parameterOrder()} == ${func.parameters.size()}))#*
              *#; #*
          *##end
#*    *##end
#*    *#): Integer;
#*    *#		cdecl; external '${prod.get_productShortNameLower()}-${mod.get_moduleNameLowerScore()}-c-${prod.get_productVersion()}.dll';
#**##end
#end

implementation

end.
